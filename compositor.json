{
  "name": "Topmarks/topmarks",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.21"
  },
  "title": "Topmarks",
  "branch": "master",
  "style": {
    "name": "Swiss",
    "componentSet": {
      "nav": "nav/BasicNav",
      "header": "header/SwissHeader",
      "article": "article/SwissArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "\"Helvetica Neue\", Helvetica, Arial, sans-serif",
    "heading": {
      "fontWeight": 700,
      "letterSpacing": "-0.01em"
    },
    "layout": {
      "fluid": true
    },
    "colors": {
      "text": "#000",
      "background": "#fff",
      "primary": "#05a",
      "secondary": "#444",
      "highlight": "#f30",
      "border": "#ccc",
      "muted": "#eee"
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/Topmarks/topmarks",
          "text": "GitHub"
        },
        {
          "href": "https://npmjs.com/package/topmarks",
          "text": "npm"
        }
      ]
    },
    {
      "component": "header",
      "heading": "topmarks",
      "subhead": "CSS Benchmarking command line tool using Chrome's remote debugging protocol.",
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "topmarks: CSS Benchmarking command line tool using Chrome's remote debugging protocol.",
          "url": ""
        },
        {
          "component": "ui/GithubButton",
          "user": "Topmarks",
          "repo": "topmarks"
        }
      ],
      "text": "v1.0.1"
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "\n<p><a href=\"https://travis-ci.org/Topmarks/topmarks\"></a> <a href=\"https://codeclimate.com/github/Topmarks/topmarks\"></a> <a href=\"https://codeclimate.com/github/Topmarks/topmarks/coverage\"></a> <a href=\"https://codeclimate.com/github/Topmarks/topmarks\"></a> <a href=\"https://david-dm.org/Topmarks/topmarks\"></a> <a href=\"http://inch-ci.org/github/Topmarks/topmarks\"></a></p>\n<p><a href=\"https://npmjs.org/package/topmarks\"></a></p>\n<p>CSS Benchmarking command line tool using Chrome&apos;s remote debugging protocol.</p>\n<hr>\n<h2>Installation</h2>\n<p>If you want to install Topmarks as a command line tool, just install it globally from <a href=\"https://docs.npmjs.com/getting-started/installing-node\">npm</a>:</p>\n<pre>npm install -g topmarks</pre><p>To use Topmarks in a project use:</p>\n<pre>npm install --save topmarks</pre><h2>Preparing the Browser for Use With Topmarks</h2>\n<p>Topcoat utilizes the remote debugger protocol to send commands to the browser and receive reports. Currently the default plugins are optimized for Chrome.</p>\n<p>To start Chrome with remote debugging enabled, it needs to be started from the command line with the <code>--remote-debugging-port=9222</code> flag included (port 9222 is the default).</p>\n<p>A helpful script is added to the <code>package.json</code> for starting it on a Mac with Chrome installed in the standard location. From the project directory it can be called using <code>npm run chrome</code> and it will execute:</p>\n<pre>/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --remote-debugging-port=9222 --user-data-dir=<span class=\"hljs-variable\">$TMPDIR</span>/chrome-profiling --no-default-browser-check --window-size=<span class=\"hljs-string\">&quot;800,600&quot;</span></pre><h2><code>Options</code></h2>\n<p>Both the command line tool and node interfaces can use an options object.</p>\n<p>Options should be formatted as an object with keys corresponding to the plugin slug (camel cased plugin name), and/or a default key.</p>\n<p>The option object is flattened by the <code>Topmarks.getOptions</code> method and passed through to the plugin with the plugin specific options overriding any defaults.</p>\n<pre><span class=\"hljs-keyword\">import</span> Topmarks <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;topmarks&apos;</span>;\n\n<span class=\"hljs-keyword\">const</span> options = {\n  <span class=\"hljs-keyword\">default</span>: {\n    url: <span class=\"hljs-string\">&quot;http://topcoat.io&quot;</span>,\n    port: <span class=\"hljs-number\">9223</span>\n  },\n  somePlugin: {\n    url: <span class=\"hljs-string\">&quot;http://google.com&quot;</span>\n  }\n};\n\n<span class=\"hljs-keyword\">const</span> topmarks = <span class=\"hljs-keyword\">new</span> Topmarks(options);\n<span class=\"hljs-built_in\">console</span>.log(topmarks.getOptions(<span class=\"hljs-string\">&apos;somePlugin&apos;</span>));</pre><p>Output:</p>\n<pre>{\n  url: <span class=\"hljs-string\">&quot;http://google.com&quot;</span>,\n  port: <span class=\"hljs-number\">9223</span>\n}</pre><p>If no options object is provided Topmarks will use these defaults:</p>\n<pre>{\n  <span class=\"hljs-keyword\">default</span>: {\n    port: <span class=\"hljs-number\">9222</span>,\n    url: <span class=\"hljs-string\">&apos;http://topcoat.io&apos;</span>\n  }\n}</pre><h2>Usage</h2>\n<h3>CLI</h3>\n<p>Topmarks can also be run from the command line (if installed globally) or as an <a href=\"https://docs.npmjs.com/misc/scripts\">npm script</a>.</p>\n<p>When installed globally, Topmarks is available from the command line as the <code>topm</code> command.</p>\n<pre>topm --help</pre><p>Will return the list of commands and options:</p>\n<ul>\n<li><code>-h, --help</code> - output usage information.</li>\n<li><code>-V, --version</code> - output the version number.</li>\n<li><code>-p, --port [port]</code> - The debugging port for google-chrome (default: 9222).</li>\n<li><code>-u, --url [url]</code> - Writes results to json file (default: <code>http://topcoat.io</code>).</li>\n<li><code>-o, --output [filename]</code> - Writes results to json file as an array of result objects.</li>\n<li><code>-a, --append-output</code> - Appends results data to the end of an existing json file (defined in <code>--output</code>).</li>\n<li><p><code>-q, --plugins [plugin(s)]</code> - A list of Topmark test plugins to run (runs <a href=\"#default-plugins\">default plugins</a> if not specified). Currently you have to pass an absolute path to the plugin, something I&apos;d like to fix in the future.</p>\n<pre>topm --plugins <span class=\"hljs-string\">&quot;[/path/to/some-plugin,/path/to/another-plugin]&quot;</span></pre></li>\n<li><p><code>-t, --parameters [string of options]</code> - A JSON string of options to be passed to plugins.</p>\n<pre>topm --parameters <span class=\"hljs-string\">&quot;{default:{url:&apos;http://example.com&apos;}}&quot;</span></pre></li>\n</ul>\n<h3>Node</h3>\n<p>Topmarks can also be run by <a href=\"https://nodejs.org/en/\">Node.js</a>.</p>\n<pre><span class=\"hljs-keyword\">import</span> Topmarks <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;topmarks&apos;</span>;\n\n<span class=\"hljs-keyword\">const</span> topmarks = <span class=\"hljs-keyword\">new</span> Topmarks({ <span class=\"hljs-keyword\">default</span>: { url: <span class=\"hljs-string\">&quot;http://google.com&quot;</span> } });\ntopmarks.register(<span class=\"hljs-string\">&apos;topmark-loadspeed&apos;</span>).then(() =&gt; {\n  <span class=\"hljs-comment\">//Do something after loading plugins</span>\n  <span class=\"hljs-comment\">//Get access to the results provided by `topmarks.results`</span>\n}).catch(<span class=\"hljs-built_in\">console</span>.log);</pre><h2>Plugins</h2>\n<h3>Default Plugins</h3>\n<p>The current default plugins included with topmarks:</p>\n<ul>\n<li><a href=\"https://github.com/Topmarks/topmark-loadspeed\"><code>topmark-loadspeed</code></a> - reports the time taken to load a website.</li>\n<li><a href=\"https://github.com/Topmarks/topmark-scrollspeed\"><code>topmark-scrollspeed</code></a> - simulates scrolling and measures the performance of the animation frames.</li>\n</ul>\n<h3>Custom Plugins</h3>\n<p>If you&apos;d like to write your own plugins to run tests on Topmarks take a look at how the default plugins are written.</p>\n<p>Make sure to include the <code>topmarks-plugin</code> <a href=\"https://www.npmjs.com/package/keywords\">keyword in your <code>package.json</code></a> when publishing to npm if you want it to be included in the <a href=\"https://www.npmjs.com/search?q=topmarks-plugin\">correct search</a></p>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/Topmarks/topmarks",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/Topmarks",
          "text": "Topmarks"
        }
      ]
    }
  ]
}